{
	"id": "6073f9f01675dbbcb230f3c6eda5da66",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"practical10b.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.18;\n\n// WRITE A SOLIDITY PROGRAM FOR FUNCTION OVERLOADING, MATHEMATICAL FUNCTION & CRYPTOGRAPHIC FUNCTIONS.\n// Mathematical\ncontract SolidityTest {\n    // (x + y) % z\n    function callAddMod() public pure returns (uint256) {\n        return addmod(4, 5, 3);\n    }\n\n    // (x * y) % z\n    function callMulMod() public pure returns (uint256) {\n        return mulmod(4, 5, 3);\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"practical10b.sol": {
				"SolidityTest": {
					"abi": [
						{
							"inputs": [],
							"name": "callAddMod",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "callMulMod",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"practical10b.sol\":177:433  contract SolidityTest {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"practical10b.sol\":177:433  contract SolidityTest {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xaa4e8744\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xf9b41691\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"practical10b.sol\":340:431  function callMulMod() public pure returns (uint256) {... */\n    tag_3:\n      tag_5\n      tag_6\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"practical10b.sol\":224:315  function callAddMod() public pure returns (uint256) {... */\n    tag_4:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_11\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"practical10b.sol\":340:431  function callMulMod() public pure returns (uint256) {... */\n    tag_6:\n        /* \"practical10b.sol\":383:390  uint256 */\n      0x00\n        /* \"practical10b.sol\":422:423  3 */\n      0x03\n        /* \"practical10b.sol\":409:424  mulmod(4, 5, 3) */\n      dup1\n      tag_13\n      jumpi\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n    tag_13:\n        /* \"practical10b.sol\":419:420  5 */\n      0x05\n        /* \"practical10b.sol\":416:417  4 */\n      0x04\n        /* \"practical10b.sol\":409:424  mulmod(4, 5, 3) */\n      mulmod\n        /* \"practical10b.sol\":402:424  return mulmod(4, 5, 3) */\n      swap1\n      pop\n        /* \"practical10b.sol\":340:431  function callMulMod() public pure returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"practical10b.sol\":224:315  function callAddMod() public pure returns (uint256) {... */\n    tag_10:\n        /* \"practical10b.sol\":267:274  uint256 */\n      0x00\n        /* \"practical10b.sol\":306:307  3 */\n      0x03\n        /* \"practical10b.sol\":293:308  addmod(4, 5, 3) */\n      dup1\n      tag_17\n      jumpi\n      tag_18\n      tag_15\n      jump\t// in\n    tag_18:\n    tag_17:\n        /* \"practical10b.sol\":303:304  5 */\n      0x05\n        /* \"practical10b.sol\":300:301  4 */\n      0x04\n        /* \"practical10b.sol\":293:308  addmod(4, 5, 3) */\n      addmod\n        /* \"practical10b.sol\":286:308  return addmod(4, 5, 3) */\n      swap1\n      pop\n        /* \"practical10b.sol\":224:315  function callAddMod() public pure returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_19:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_20:\n        /* \"#utility.yul\":177:201   */\n      tag_24\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_19\n      jump\t// in\n    tag_24:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_8:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_26\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_20\n      jump\t// in\n    tag_26:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":442:622   */\n    tag_15:\n        /* \"#utility.yul\":490:567   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":487:488   */\n      0x00\n        /* \"#utility.yul\":480:568   */\n      mstore\n        /* \"#utility.yul\":587:591   */\n      0x12\n        /* \"#utility.yul\":584:585   */\n      0x04\n        /* \"#utility.yul\":577:592   */\n      mstore\n        /* \"#utility.yul\":611:615   */\n      0x24\n        /* \"#utility.yul\":608:609   */\n      0x00\n        /* \"#utility.yul\":601:616   */\n      revert\n\n    auxdata: 0xa2646970667358221220d1b33352a385b7571140b637ef6569c441ad96dd196d51e03dd10218d2d4865c64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610132806100206000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c8063aa4e8744146037578063f9b41691146051575b600080fd5b603d606b565b6040516048919060b4565b60405180910390f35b60576084565b6040516062919060b4565b60405180910390f35b6000600380607a57607960cd565b5b6005600409905090565b6000600380609357609260cd565b5b6005600408905090565b6000819050919050565b60ae81609d565b82525050565b600060208201905060c7600083018460a7565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fdfea2646970667358221220d1b33352a385b7571140b637ef6569c441ad96dd196d51e03dd10218d2d4865c64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x132 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x32 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAA4E8744 EQ PUSH1 0x37 JUMPI DUP1 PUSH4 0xF9B41691 EQ PUSH1 0x51 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3D PUSH1 0x6B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x48 SWAP2 SWAP1 PUSH1 0xB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x57 PUSH1 0x84 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x62 SWAP2 SWAP1 PUSH1 0xB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP1 PUSH1 0x7A JUMPI PUSH1 0x79 PUSH1 0xCD JUMP JUMPDEST JUMPDEST PUSH1 0x5 PUSH1 0x4 MULMOD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP1 PUSH1 0x93 JUMPI PUSH1 0x92 PUSH1 0xCD JUMP JUMPDEST JUMPDEST PUSH1 0x5 PUSH1 0x4 ADDMOD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xAE DUP2 PUSH1 0x9D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0xC7 PUSH1 0x0 DUP4 ADD DUP5 PUSH1 0xA7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD1 0xB3 CALLER MSTORE LOG3 DUP6 0xB7 JUMPI GT BLOCKHASH 0xB6 CALLDATACOPY 0xEF PUSH6 0x69C441AD96DD NOT PUSH14 0x51E03DD10218D2D4865C64736F6C PUSH4 0x43000812 STOP CALLER ",
							"sourceMap": "177:256:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@callAddMod_13": {
									"entryPoint": 132,
									"id": 13,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@callMulMod_25": {
									"entryPoint": 107,
									"id": 25,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 167,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 180,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 157,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x12": {
									"entryPoint": 205,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:625:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "73:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:1",
														"type": ""
													}
												],
												"src": "7:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "155:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "165:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "143:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "150:3:1",
														"type": ""
													}
												],
												"src": "90:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "312:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "322:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "345:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "330:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "426:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "358:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "358:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "284:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "296:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "307:4:1",
														"type": ""
													}
												],
												"src": "214:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "470:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "487:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "490:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "480:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "480:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "480:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "584:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "587:4:1",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "577:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "577:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "577:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "608:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "611:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "601:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "601:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "601:15:1"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "442:180:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b506004361060325760003560e01c8063aa4e8744146037578063f9b41691146051575b600080fd5b603d606b565b6040516048919060b4565b60405180910390f35b60576084565b6040516062919060b4565b60405180910390f35b6000600380607a57607960cd565b5b6005600409905090565b6000600380609357609260cd565b5b6005600408905090565b6000819050919050565b60ae81609d565b82525050565b600060208201905060c7600083018460a7565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fdfea2646970667358221220d1b33352a385b7571140b637ef6569c441ad96dd196d51e03dd10218d2d4865c64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x32 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAA4E8744 EQ PUSH1 0x37 JUMPI DUP1 PUSH4 0xF9B41691 EQ PUSH1 0x51 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3D PUSH1 0x6B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x48 SWAP2 SWAP1 PUSH1 0xB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x57 PUSH1 0x84 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x62 SWAP2 SWAP1 PUSH1 0xB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP1 PUSH1 0x7A JUMPI PUSH1 0x79 PUSH1 0xCD JUMP JUMPDEST JUMPDEST PUSH1 0x5 PUSH1 0x4 MULMOD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP1 PUSH1 0x93 JUMPI PUSH1 0x92 PUSH1 0xCD JUMP JUMPDEST JUMPDEST PUSH1 0x5 PUSH1 0x4 ADDMOD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xAE DUP2 PUSH1 0x9D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0xC7 PUSH1 0x0 DUP4 ADD DUP5 PUSH1 0xA7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD1 0xB3 CALLER MSTORE LOG3 DUP6 0xB7 JUMPI GT BLOCKHASH 0xB6 CALLDATACOPY 0xEF PUSH6 0x69C441AD96DD NOT PUSH14 0x51E03DD10218D2D4865C64736F6C PUSH4 0x43000812 STOP CALLER ",
							"sourceMap": "177:256:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;340:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;224;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;340;383:7;422:1;409:15;;;;;:::i;:::-;;419:1;416;409:15;402:22;;340:91;:::o;224:::-;267:7;306:1;293:15;;;;;:::i;:::-;;303:1;300;293:15;286:22;;224:91;:::o;7:77:1:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:180::-;490:77;487:1;480:88;587:4;584:1;577:15;611:4;608:1;601:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "61200",
								"executionCost": "111",
								"totalCost": "61311"
							},
							"external": {
								"callAddMod()": "368",
								"callMulMod()": "346"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 177,
									"end": 433,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 177,
									"end": 433,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 177,
									"end": 433,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 177,
									"end": 433,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 177,
									"end": 433,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 177,
									"end": 433,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 177,
									"end": 433,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 177,
									"end": 433,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 177,
									"end": 433,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 177,
									"end": 433,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 177,
									"end": 433,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 177,
									"end": 433,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 177,
									"end": 433,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 177,
									"end": 433,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 177,
									"end": 433,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 177,
									"end": 433,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 177,
									"end": 433,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 177,
									"end": 433,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 177,
									"end": 433,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 177,
									"end": 433,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 177,
									"end": 433,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d1b33352a385b7571140b637ef6569c441ad96dd196d51e03dd10218d2d4865c64736f6c63430008120033",
									".code": [
										{
											"begin": 177,
											"end": 433,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 177,
											"end": 433,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 177,
											"end": 433,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 177,
											"end": 433,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 177,
											"end": 433,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 177,
											"end": 433,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 177,
											"end": 433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 177,
											"end": 433,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 177,
											"end": 433,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 177,
											"end": 433,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 177,
											"end": 433,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 177,
											"end": 433,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 177,
											"end": 433,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 177,
											"end": 433,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 177,
											"end": 433,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 177,
											"end": 433,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 177,
											"end": 433,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 177,
											"end": 433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 177,
											"end": 433,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 177,
											"end": 433,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 177,
											"end": 433,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 177,
											"end": 433,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 177,
											"end": 433,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 177,
											"end": 433,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 177,
											"end": 433,
											"name": "PUSH",
											"source": 0,
											"value": "AA4E8744"
										},
										{
											"begin": 177,
											"end": 433,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 177,
											"end": 433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 177,
											"end": 433,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 177,
											"end": 433,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 177,
											"end": 433,
											"name": "PUSH",
											"source": 0,
											"value": "F9B41691"
										},
										{
											"begin": 177,
											"end": 433,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 177,
											"end": 433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 177,
											"end": 433,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 177,
											"end": 433,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 177,
											"end": 433,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 177,
											"end": 433,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 177,
											"end": 433,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 177,
											"end": 433,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 340,
											"end": 431,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 340,
											"end": 431,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 340,
											"end": 431,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 340,
											"end": 431,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 340,
											"end": 431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 340,
											"end": 431,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 340,
											"end": 431,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 340,
											"end": 431,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 340,
											"end": 431,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 340,
											"end": 431,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 340,
											"end": 431,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 340,
											"end": 431,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 340,
											"end": 431,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 340,
											"end": 431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 340,
											"end": 431,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 340,
											"end": 431,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 340,
											"end": 431,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 340,
											"end": 431,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 340,
											"end": 431,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 340,
											"end": 431,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 340,
											"end": 431,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 340,
											"end": 431,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 340,
											"end": 431,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 224,
											"end": 315,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 224,
											"end": 315,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 224,
											"end": 315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 224,
											"end": 315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 224,
											"end": 315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 224,
											"end": 315,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 224,
											"end": 315,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 224,
											"end": 315,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 224,
											"end": 315,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 224,
											"end": 315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 224,
											"end": 315,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 224,
											"end": 315,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 224,
											"end": 315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 224,
											"end": 315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 224,
											"end": 315,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 224,
											"end": 315,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 224,
											"end": 315,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 224,
											"end": 315,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 224,
											"end": 315,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 224,
											"end": 315,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 224,
											"end": 315,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 224,
											"end": 315,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 224,
											"end": 315,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 340,
											"end": 431,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 340,
											"end": 431,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 383,
											"end": 390,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 422,
											"end": 423,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 409,
											"end": 424,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 409,
											"end": 424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 409,
											"end": 424,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 409,
											"end": 424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 409,
											"end": 424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 409,
											"end": 424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 409,
											"end": 424,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 409,
											"end": 424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 409,
											"end": 424,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 409,
											"end": 424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 419,
											"end": 420,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 416,
											"end": 417,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 409,
											"end": 424,
											"name": "MULMOD",
											"source": 0
										},
										{
											"begin": 402,
											"end": 424,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 402,
											"end": 424,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 340,
											"end": 431,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 340,
											"end": 431,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 224,
											"end": 315,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 224,
											"end": 315,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 267,
											"end": 274,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 306,
											"end": 307,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 293,
											"end": 308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 293,
											"end": 308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 293,
											"end": 308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 293,
											"end": 308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 293,
											"end": 308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 293,
											"end": 308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 293,
											"end": 308,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 293,
											"end": 308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 293,
											"end": 308,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 293,
											"end": 308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 303,
											"end": 304,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 300,
											"end": 301,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 293,
											"end": 308,
											"name": "ADDMOD",
											"source": 0
										},
										{
											"begin": 286,
											"end": 308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 286,
											"end": 308,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 224,
											"end": 315,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 224,
											"end": 315,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 442,
											"end": 622,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 442,
											"end": 622,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 490,
											"end": 567,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 487,
											"end": 488,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 480,
											"end": 568,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 587,
											"end": 591,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 584,
											"end": 585,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 577,
											"end": 592,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 611,
											"end": 615,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 608,
											"end": 609,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 601,
											"end": 616,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"practical10b.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"callAddMod()": "f9b41691",
							"callMulMod()": "aa4e8744"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"callAddMod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"callMulMod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"practical10b.sol\":\"SolidityTest\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"practical10b.sol\":{\"keccak256\":\"0x6f013a80bdf5d9f135a574d538bfc9fd1f1a505781eb7504baae031b637964ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b9413bc70638a04ee796c15227a02a96c90992e6b43371f30e00fcff925e2d4a\",\"dweb:/ipfs/QmSoui9yc8S5Sf5HSPgjokvsmqauXHhxyjfaA7PBR57G6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"practical10b.sol": {
				"ast": {
					"absolutePath": "practical10b.sol",
					"exportedSymbols": {
						"SolidityTest": [
							26
						]
					},
					"id": 27,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SolidityTest",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 26,
							"linearizedBaseContracts": [
								26
							],
							"name": "SolidityTest",
							"nameLocation": "186:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 12,
										"nodeType": "Block",
										"src": "276:39:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "34",
															"id": 7,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "300:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4_by_1",
																"typeString": "int_const 4"
															},
															"value": "4"
														},
														{
															"hexValue": "35",
															"id": 8,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "303:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_5_by_1",
																"typeString": "int_const 5"
															},
															"value": "5"
														},
														{
															"hexValue": "33",
															"id": 9,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "306:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															},
															"value": "3"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_4_by_1",
																"typeString": "int_const 4"
															},
															{
																"typeIdentifier": "t_rational_5_by_1",
																"typeString": "int_const 5"
															},
															{
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															}
														],
														"id": 6,
														"name": "addmod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967294,
														"src": "293:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_addmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 10,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "293:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 5,
												"id": 11,
												"nodeType": "Return",
												"src": "286:22:0"
											}
										]
									},
									"functionSelector": "f9b41691",
									"id": 13,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "callAddMod",
									"nameLocation": "233:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "243:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "267:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "267:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "266:9:0"
									},
									"scope": 26,
									"src": "224:91:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 24,
										"nodeType": "Block",
										"src": "392:39:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "34",
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "416:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4_by_1",
																"typeString": "int_const 4"
															},
															"value": "4"
														},
														{
															"hexValue": "35",
															"id": 20,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "419:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_5_by_1",
																"typeString": "int_const 5"
															},
															"value": "5"
														},
														{
															"hexValue": "33",
															"id": 21,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "422:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															},
															"value": "3"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_4_by_1",
																"typeString": "int_const 4"
															},
															{
																"typeIdentifier": "t_rational_5_by_1",
																"typeString": "int_const 5"
															},
															{
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															}
														],
														"id": 18,
														"name": "mulmod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967280,
														"src": "409:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "409:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 17,
												"id": 23,
												"nodeType": "Return",
												"src": "402:22:0"
											}
										]
									},
									"functionSelector": "aa4e8744",
									"id": 25,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "callMulMod",
									"nameLocation": "349:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "359:2:0"
									},
									"returnParameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "383:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 15,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "383:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "382:9:0"
									},
									"scope": 26,
									"src": "340:91:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 27,
							"src": "177:256:0",
							"usedErrors": []
						}
					],
					"src": "32:402:0"
				},
				"id": 0
			}
		}
	}
}